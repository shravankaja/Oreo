{"ast":null,"code":"var _jsxFileName = \"/home/admin1/oreo/Oreo/webapporeo/src/Components/NestedCurveAreaChart.tsx\";\nimport React from 'react';\nimport { VictoryArea, VictoryChart, VictoryVoronoiContainer, VictoryTooltip, VictoryAxis } from 'victory';\nimport { fetchCurveAreaChartsData } from '../Services/DataFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport {};\n\nclass NestedCurveAreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curveDataOne: [{\n        x: 0,\n        y: 0,\n        label: 0\n      }],\n      curveDataTwo: [{\n        x: 0,\n        y: 0,\n        label: 0\n      }],\n      curveDataThree: [{\n        x: 0,\n        y: 0,\n        label: 0\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nestcurvearea-ecommerceDashboard\",\n        children: /*#__PURE__*/_jsxDEV(VictoryChart, {\n          containerComponent: /*#__PURE__*/_jsxDEV(VictoryVoronoiContainer, {\n            labelComponent: /*#__PURE__*/_jsxDEV(VictoryTooltip, {\n              dy: 1,\n              constrainToVisibleArea: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this),\n          width: 1000,\n          children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n            tickValues: [2, 4, 6, 8, 10, 12, 14],\n            tickFormat: [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n            dependentAxis: true,\n            tickValues: [0.5, 1, 1.5, 2, 2.5],\n            tickFormat: [\"0\", \"50\", \"100\", \"150\", \"200\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryArea, {\n            interpolation: \"natural\",\n            labelComponent: /*#__PURE__*/_jsxDEV(VictoryTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 45\n            }, this),\n            data: this.state.curveDataOne,\n            style: {\n              data: {\n                fill: \"blue\",\n                width: 20,\n                opacity: 0.5\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryArea, {\n            interpolation: \"natural\",\n            labelComponent: /*#__PURE__*/_jsxDEV(VictoryTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 45\n            }, this),\n            data: this.state.curveDataTwo,\n            style: {\n              data: {\n                fill: \"yellow\",\n                width: 20,\n                opacity: 0.7\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryArea, {\n            interpolation: \"natural\",\n            labelComponent: /*#__PURE__*/_jsxDEV(VictoryTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 45\n            }, this),\n            data: this.state.curveDataThree,\n            style: {\n              data: {\n                fill: \"pink\",\n                width: 20,\n                opacity: 0.8\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    fetchCurveAreaChartsData().then(resp => {\n      this.setState({\n        curveDataOne: resp.curveOne,\n        curveDataTwo: resp.curveTwo,\n        curveDataThree: resp.curveThree\n      });\n    });\n  }\n\n}\n\nexport default NestedCurveAreaChart;","map":{"version":3,"sources":["/home/admin1/oreo/Oreo/webapporeo/src/Components/NestedCurveAreaChart.tsx"],"names":["React","VictoryArea","VictoryChart","VictoryVoronoiContainer","VictoryTooltip","VictoryAxis","fetchCurveAreaChartsData","NestedCurveAreaChart","Component","constructor","props","state","curveDataOne","x","y","label","curveDataTwo","curveDataThree","render","data","fill","width","opacity","componentDidMount","then","resp","setState","curveOne","curveTwo","curveThree"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { VictoryArea, VictoryChart, VictoryVoronoiContainer, VictoryTooltip, VictoryAxis } from 'victory'\nimport { fetchCurveAreaChartsData, fetchSmallTextAreaChartsData } from '../Services/DataFetch'\nexport { }\n\ninterface StateType {\n    curveDataOne: [{ x: number, y: number, label: number }],\n    curveDataTwo: [{ x: number, y: number, label: number }],\n    curveDataThree: [{ x: number, y: number, label: number }],\n}\n\nclass NestedCurveAreaChart extends React.Component<{}, StateType> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            curveDataOne: [{ x: 0, y: 0, label: 0 }],\n            curveDataTwo: [{ x: 0, y: 0, label: 0 }],\n            curveDataThree: [{ x: 0, y: 0, label: 0 }]\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <div className=\"nestcurvearea-ecommerceDashboard\">\n                    <VictoryChart containerComponent={\n                        <VictoryVoronoiContainer\n\n                            labelComponent={\n                                <VictoryTooltip dy={1} constrainToVisibleArea />\n                            }\n\n                        />} width={1000} >\n                        <VictoryAxis tickValues={[2, 4, 6, 8, 10, 12, 14]}\n                            tickFormat={[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\"]}\n                        />\n                        <VictoryAxis dependentAxis\n                            tickValues={[0.5, 1, 1.5, 2, 2.5]}\n                            tickFormat={[\"0\", \"50\", \"100\", \"150\", \"200\"]}\n                        />\n                        <VictoryArea\n                            interpolation=\"natural\"\n                            labelComponent={<VictoryTooltip />}\n                            data={this.state.curveDataOne}\n                            style={{\n                                data: { fill: \"blue\", width: 20, opacity: 0.5 }\n                            }}\n                        />\n                        <VictoryArea\n                            interpolation=\"natural\"\n                            labelComponent={<VictoryTooltip />}\n                            data={this.state.curveDataTwo}\n                            style={{\n                                data: { fill: \"yellow\", width: 20, opacity: 0.7 }\n                            }}\n                        />\n                        <VictoryArea\n                            interpolation=\"natural\"\n                            labelComponent={<VictoryTooltip />}\n                            data={this.state.curveDataThree}\n                            style={{\n                                data: { fill: \"pink\", width: 20, opacity: 0.8 }\n                            }}\n                        />\n                    </VictoryChart>\n                </div>\n            </>\n        )\n    }\n\n    componentDidMount() {\n        fetchCurveAreaChartsData().then((resp: any) => {\n            this.setState({ curveDataOne: resp.curveOne, curveDataTwo: resp.curveTwo, curveDataThree: resp.curveThree })\n        })\n    }\n}\n\nexport default NestedCurveAreaChart;"]},"metadata":{},"sourceType":"module"}
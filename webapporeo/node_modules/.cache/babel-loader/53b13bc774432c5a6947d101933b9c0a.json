{"ast":null,"code":"var _jsxFileName = \"/home/admin1/oreo/Oreo/webapporeo/src/Components/EarningsBarChart.tsx\";\nimport React from 'react';\nimport { VictoryTheme, VictoryAxis, VictoryBar, VictoryChart, VictoryStack } from 'victory';\nimport '../CSS/EarningsBarChart.css';\nimport { fetchBarchart } from '../Services/DataFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport {};\n\nclass EarningsBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: \"100px\",\n      dataOne: [{\n        p: 0,\n        earnings: 0\n      }],\n      dataTwo: [{\n        p: 0,\n        earnings: 0\n      }],\n      dataThree: [{\n        p: 0,\n        earnings: 0\n      }]\n    };\n  }\n\n  render() {\n    const setWidth = {\n      width: \"800px\"\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chartContainer-ecommerece\",\n        children: /*#__PURE__*/_jsxDEV(VictoryChart, {\n          domainPadding: 50,\n          theme: VictoryTheme.material,\n          height: 800,\n          width: 2900,\n          children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n            tickValues: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            tickFormat: [\"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"7.0\", \"8.0\", \"9.0\", \"10.0\"],\n            style: {\n              tickLabels: {\n                fontSize: 30\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n            dependentAxis: true,\n            tickValues: [10, 20, 30, 40, 50, 60],\n            tickFormat: [\"10\", \"20\", \"30\", \"40\", \"50\", \"60\"],\n            style: {\n              tickLabels: {\n                fontSize: 30\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VictoryStack, {\n            children: [/*#__PURE__*/_jsxDEV(VictoryBar, {\n              style: {\n                data: {\n                  fill: \"lightblue\"\n                }\n              },\n              barWidth: 86,\n              data: this.state.dataOne,\n              x: \"p\",\n              y: \"earnings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n              style: {\n                data: {\n                  fill: \"orange\"\n                }\n              },\n              barWidth: 86,\n              data: this.state.dataTwo,\n              x: \"p\",\n              y: \"earnings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n              style: {\n                data: {\n                  fill: \"#424787\"\n                }\n              },\n              data: this.state.dataThree,\n              barWidth: 86,\n              x: \"p\",\n              y: \"earnings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    fetchBarchart().then(resp => {\n      this.setState({\n        dataOne: resp[0].dataBarOne,\n        dataTwo: resp[1].dataBarTwo,\n        dataThree: resp[2].dataBarThree\n      });\n    });\n  }\n\n}\n\nexport default EarningsBarChart;","map":{"version":3,"sources":["/home/admin1/oreo/Oreo/webapporeo/src/Components/EarningsBarChart.tsx"],"names":["React","VictoryTheme","VictoryAxis","VictoryBar","VictoryChart","VictoryStack","fetchBarchart","EarningsBarChart","Component","constructor","props","state","width","dataOne","p","earnings","dataTwo","dataThree","render","setWidth","material","tickLabels","fontSize","data","fill","componentDidMount","then","resp","setState","dataBarOne","dataBarTwo","dataBarThree"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { VictoryTheme, VictoryAxis, VictoryBar, VictoryChart, VictoryStack } from 'victory'\nimport '../CSS/EarningsBarChart.css'\nimport { fetchBarchart } from '../Services/DataFetch'\ndeclare namespace JSX {\n    interface IntrinsicElements {\n        VictoryBar: any;\n    }\n}\nexport { }\n\ninterface StateType {\n    dataOne: [{ p: number, earnings: number }],\n    width: string,\n    dataTwo: [{ p: number, earnings: number }],\n    dataThree: [{ p: number, earnings: number }]\n\n}\n\n\nclass EarningsBarChart extends React.Component<{}, StateType> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            width: \"100px\",\n            dataOne: [{ p: 0, earnings: 0 }],\n            dataTwo: [{ p: 0, earnings: 0 }],\n            dataThree: [{ p: 0, earnings: 0 }]\n        }\n\n    }\n\n    render() {\n\n        const setWidth = {\n            width: \"800px\"\n        }\n        return (\n            <>\n                <div className=\"chartContainer-ecommerece\">\n                    <VictoryChart domainPadding={50} theme={VictoryTheme.material}\n                        height={800}\n                        width={2900}>\n                        <VictoryAxis\n                            tickValues={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}\n\n                            tickFormat={[\"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"7.0\", \"8.0\", \"9.0\", \"10.0\"]}\n                            style={{ tickLabels: { fontSize: 30 } }}\n                        />\n\n                        <VictoryAxis\n                            dependentAxis\n                            tickValues={[10, 20, 30, 40, 50, 60]}\n                            tickFormat={[\"10\", \"20\", \"30\", \"40\", \"50\", \"60\"]}\n                            style={{ tickLabels: { fontSize: 30 } }}\n                        />\n                        <VictoryStack>\n                            <VictoryBar\n                                style={{\n                                    data: { fill: \"lightblue\" }\n                                }}\n\n                                barWidth={86}\n                                data={this.state.dataOne}\n                                \n                                x=\"p\"\n\n                                y=\"earnings\"\n\n                            />\n                            <VictoryBar\n                                style={{\n                                    data: { fill: \"orange\" },\n                                }}\n\n                                barWidth={86}\n\n                                data={this.state.dataTwo}\n\n                                x=\"p\"\n\n                                y=\"earnings\"\n\n                            />\n\n                            <VictoryBar\n                                style={{\n                                    data: { fill: \"#424787\" }\n                                }}\n\n                                data={this.state.dataThree}\n\n                                barWidth={86}\n\n                                x=\"p\"\n\n                                y=\"earnings\"\n\n                            />\n\n\n                        </VictoryStack>\n                    </VictoryChart>\n                </div>\n            </>\n        )\n    }\n\n    componentDidMount() {\n        fetchBarchart().then((resp: any) => {\n            this.setState({ dataOne: resp[0].dataBarOne, dataTwo: resp[1].dataBarTwo, dataThree: resp[2].dataBarThree })\n\n        })\n    }\n}\n\nexport default EarningsBarChart;"]},"metadata":{},"sourceType":"module"}